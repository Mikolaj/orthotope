"""Package description auto-generated from orthotope.cabal by cabal2build.

"""
description = struct(
    specVersionRaw = ">=1.10",
    package = struct(pkgName = "orthotope", pkgVersion = "0.1.0.0"),
    licenseRaw = "NONE",
    licenseFiles = [],
    copyright = "2018 Google Inc",
    maintainer = "",
    author = "",
    stability = "",
    testedWith = [],
    homepage = "",
    pkgUrl = "",
    bugReports = "",
    sourceRepos = [],
    synopsis = "",
    description = "",
    category = "",
    customFieldsPD = [],
    buildTypeRaw = "Simple",
    setupBuildInfo = None,
    library = struct(
        libName = None,
        exposedModules = [
            "Data.Array.Convert",
            "Data.Array.Dynamic",
            "Data.Array.DynamicG",
            "Data.Array.DynamicS",
            "Data.Array.DynamicU",
            "Data.Array.Ranked",
            "Data.Array.RankedG",
            "Data.Array.RankedS",
            "Data.Array.RankedU",
            "Data.Array.Shaped",
            "Data.Array.ShapedG",
            "Data.Array.ShapedS",
            "Data.Array.ShapedU",
            "Data.Array.Internal",
            "Data.Array.Internal.Dynamic",
            "Data.Array.Internal.DynamicG",
            "Data.Array.Internal.DynamicS",
            "Data.Array.Internal.DynamicU",
            "Data.Array.Internal.Ranked",
            "Data.Array.Internal.RankedG",
            "Data.Array.Internal.RankedS",
            "Data.Array.Internal.RankedU",
            "Data.Array.Internal.Shape",
            "Data.Array.Internal.Shaped",
            "Data.Array.Internal.ShapedG",
            "Data.Array.Internal.ShapedS",
            "Data.Array.Internal.ShapedU",
        ],
        reexportedModules = [],
        signatures = [],
        libExposed = True,
        libBuildInfo = struct(
            buildable = True,
            buildTools = [],
            buildToolDepends = [],
            cppOptions = [],
            asmOptions = [],
            cmmOptions = [],
            ccOptions = [],
            cxxOptions = [],
            ldOptions = [],
            pkgconfigDepends = [],
            frameworks = [],
            extraFrameworkDirs = [],
            asmSources = [],
            cmmSources = [],
            cSources = [],
            cxxSources = [],
            jsSources = [],
            hsSourceDirs = ["."],
            otherModules = [],
            virtualModules = [],
            autogenModules = [],
            defaultLanguage = "Haskell2010",
            otherLanguages = [],
            defaultExtensions = ["NoStarIsType"],
            otherExtensions = [],
            oldExtensions = [],
            extraLibs = [],
            extraGHCiLibs = [],
            extraBundledLibs = [],
            extraLibFlavours = [],
            extraLibDirs = [],
            includeDirs = [],
            includes = [],
            installIncludes = [],
            options = [("ghc", ["-Wall"])],
            profOptions = [],
            sharedOptions = [],
            staticOptions = [],
            customFieldsBI = [],
            targetBuildDepends = [
                struct(name = "QuickCheck", version = "-any"),
                struct(name = "base", version = "-any"),
                struct(name = "deepseq", version = "-any"),
                struct(name = "dlist", version = "-any"),
                struct(name = "pretty", version = "-any"),
                struct(name = "vector", version = "-any"),
            ],
            mixins = [],
        ),
    ),
    subLibraries = [],
    executables = [],
    foreignLibs = [],
    testSuites = [
        struct(
            testName = "tests",
            testInterface = struct(
                type = "exitcode-stdio-1.0",
                version = "1.0",
                mainIs = "Tests.hs",
            ),
            testBuildInfo = struct(
                buildable = True,
                buildTools = [],
                buildToolDepends = [],
                cppOptions = [],
                asmOptions = [],
                cmmOptions = [],
                ccOptions = [],
                cxxOptions = [],
                ldOptions = [],
                pkgconfigDepends = [],
                frameworks = [],
                extraFrameworkDirs = [],
                asmSources = [],
                cmmSources = [],
                cSources = [],
                cxxSources = [],
                jsSources = [],
                hsSourceDirs = ["tests"],
                otherModules = [
                    "DynamicTest",
                    "DynamicUTest",
                    "RankedTest",
                    "RankedUTest",
                    "ShapedTest",
                    "ShapedUTest",
                ],
                virtualModules = [],
                autogenModules = [],
                defaultLanguage = "Haskell2010",
                otherLanguages = [],
                defaultExtensions = [],
                otherExtensions = [],
                oldExtensions = [],
                extraLibs = [],
                extraGHCiLibs = [],
                extraBundledLibs = [],
                extraLibFlavours = [],
                extraLibDirs = [],
                includeDirs = [],
                includes = [],
                installIncludes = [],
                options = [("ghc", ["-Wall", "-rtsopts"])],
                profOptions = [],
                sharedOptions = [],
                staticOptions = [],
                customFieldsBI = [],
                targetBuildDepends = [
                    struct(name = "HUnit", version = "-any"),
                    struct(name = "QuickCheck", version = ">=2.4.0.1"),
                    struct(name = "base", version = "-any"),
                    struct(name = "deepseq", version = "-any"),
                    struct(name = "orthotope", version = "-any"),
                    struct(name = "test-framework", version = ">=0.3.3"),
                    struct(name = "test-framework-hunit", version = "-any"),
                    struct(name = "test-framework-quickcheck2", version = "-any"),
                    struct(name = "vector", version = "-any"),
                ],
                mixins = [],
            ),
        ),
    ],
    benchmarks = [],
    dataFiles = [],
    dataDir = "",
    extraSrcFiles = [],
    extraTmpFiles = [],
    extraDocFiles = [],
)
